// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// update_n_features_vector
void update_n_features_vector(IntegerVector feature_idx, IntegerVector n_nonzero_features_vector, int offset, int start_idx, int end_idx);
RcppExport SEXP _ondisc_update_n_features_vector(SEXP feature_idxSEXP, SEXP n_nonzero_features_vectorSEXP, SEXP offsetSEXP, SEXP start_idxSEXP, SEXP end_idxSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type feature_idx(feature_idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_nonzero_features_vector(n_nonzero_features_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< int >::type start_idx(start_idxSEXP);
    Rcpp::traits::input_parameter< int >::type end_idx(end_idxSEXP);
    update_n_features_vector(feature_idx, n_nonzero_features_vector, offset, start_idx, end_idx);
    return R_NilValue;
END_RCPP
}
// decrement_vector
void decrement_vector(IntegerVector v);
RcppExport SEXP _ondisc_decrement_vector(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type v(vSEXP);
    decrement_vector(v);
    return R_NilValue;
END_RCPP
}
// add_value_to_vector
void add_value_to_vector(IntegerVector v, int to_add);
RcppExport SEXP _ondisc_add_value_to_vector(SEXP vSEXP, SEXP to_addSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< int >::type to_add(to_addSEXP);
    add_value_to_vector(v, to_add);
    return R_NilValue;
END_RCPP
}
// compute_cellwise_covariates
void compute_cellwise_covariates(IntegerVector n_umis, IntegerVector n_nonzero, NumericVector p_mito, IntegerVector feature_w_max_expression, NumericVector frac_umis_max_feature, IntegerVector feature_idx, IntegerVector j, IntegerVector x, IntegerVector mt_feature_idxs, int start_idx, int end_idx, int feature_offset, int cell_offset, int n_cells, bool compute_n_umis, bool compute_n_nonzero, bool compute_p_mito, bool compute_feature_w_max_expression, bool compute_frac_umis_max_feature);
RcppExport SEXP _ondisc_compute_cellwise_covariates(SEXP n_umisSEXP, SEXP n_nonzeroSEXP, SEXP p_mitoSEXP, SEXP feature_w_max_expressionSEXP, SEXP frac_umis_max_featureSEXP, SEXP feature_idxSEXP, SEXP jSEXP, SEXP xSEXP, SEXP mt_feature_idxsSEXP, SEXP start_idxSEXP, SEXP end_idxSEXP, SEXP feature_offsetSEXP, SEXP cell_offsetSEXP, SEXP n_cellsSEXP, SEXP compute_n_umisSEXP, SEXP compute_n_nonzeroSEXP, SEXP compute_p_mitoSEXP, SEXP compute_feature_w_max_expressionSEXP, SEXP compute_frac_umis_max_featureSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type n_umis(n_umisSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_nonzero(n_nonzeroSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p_mito(p_mitoSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type feature_w_max_expression(feature_w_max_expressionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type frac_umis_max_feature(frac_umis_max_featureSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type feature_idx(feature_idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j(jSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mt_feature_idxs(mt_feature_idxsSEXP);
    Rcpp::traits::input_parameter< int >::type start_idx(start_idxSEXP);
    Rcpp::traits::input_parameter< int >::type end_idx(end_idxSEXP);
    Rcpp::traits::input_parameter< int >::type feature_offset(feature_offsetSEXP);
    Rcpp::traits::input_parameter< int >::type cell_offset(cell_offsetSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_n_umis(compute_n_umisSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_n_nonzero(compute_n_nonzeroSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_p_mito(compute_p_mitoSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_feature_w_max_expression(compute_feature_w_max_expressionSEXP);
    Rcpp::traits::input_parameter< bool >::type compute_frac_umis_max_feature(compute_frac_umis_max_featureSEXP);
    compute_cellwise_covariates(n_umis, n_nonzero, p_mito, feature_w_max_expression, frac_umis_max_feature, feature_idx, j, x, mt_feature_idxs, start_idx, end_idx, feature_offset, cell_offset, n_cells, compute_n_umis, compute_n_nonzero, compute_p_mito, compute_feature_w_max_expression, compute_frac_umis_max_feature);
    return R_NilValue;
END_RCPP
}
// write_to_csr
void write_to_csr(const std::string& file_name_in, int start_idx, int end_idx, int feature_offset, int cell_offset, int n_features, SEXP f_row_ptr, IntegerVector feature_idx, IntegerVector m_j, IntegerVector m_x);
RcppExport SEXP _ondisc_write_to_csr(SEXP file_name_inSEXP, SEXP start_idxSEXP, SEXP end_idxSEXP, SEXP feature_offsetSEXP, SEXP cell_offsetSEXP, SEXP n_featuresSEXP, SEXP f_row_ptrSEXP, SEXP feature_idxSEXP, SEXP m_jSEXP, SEXP m_xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< int >::type start_idx(start_idxSEXP);
    Rcpp::traits::input_parameter< int >::type end_idx(end_idxSEXP);
    Rcpp::traits::input_parameter< int >::type feature_offset(feature_offsetSEXP);
    Rcpp::traits::input_parameter< int >::type cell_offset(cell_offsetSEXP);
    Rcpp::traits::input_parameter< int >::type n_features(n_featuresSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type feature_idx(feature_idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type m_j(m_jSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type m_x(m_xSEXP);
    write_to_csr(file_name_in, start_idx, end_idx, feature_offset, cell_offset, n_features, f_row_ptr, feature_idx, m_j, m_x);
    return R_NilValue;
END_RCPP
}
// create_odm
void create_odm(const std::string& file_name_in, IntegerVector n_nonzero_features, StringVector feature_ids, int n_cells, int integer_id, int chunk_size, int compression_level);
RcppExport SEXP _ondisc_create_odm(SEXP file_name_inSEXP, SEXP n_nonzero_featuresSEXP, SEXP feature_idsSEXP, SEXP n_cellsSEXP, SEXP integer_idSEXP, SEXP chunk_sizeSEXP, SEXP compression_levelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_nonzero_features(n_nonzero_featuresSEXP);
    Rcpp::traits::input_parameter< StringVector >::type feature_ids(feature_idsSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< int >::type integer_id(integer_idSEXP);
    Rcpp::traits::input_parameter< int >::type chunk_size(chunk_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type compression_level(compression_levelSEXP);
    create_odm(file_name_in, n_nonzero_features, feature_ids, n_cells, integer_id, chunk_size, compression_level);
    return R_NilValue;
END_RCPP
}
// create_odm_r_matrix_cpp
void create_odm_r_matrix_cpp(const std::string& file_name_in, StringVector feature_ids, int n_features, int n_cells, int integer_id, int chunk_size, int compression_level, const std::vector<int>& j, const std::vector<int>& x, const std::vector<int>& p);
RcppExport SEXP _ondisc_create_odm_r_matrix_cpp(SEXP file_name_inSEXP, SEXP feature_idsSEXP, SEXP n_featuresSEXP, SEXP n_cellsSEXP, SEXP integer_idSEXP, SEXP chunk_sizeSEXP, SEXP compression_levelSEXP, SEXP jSEXP, SEXP xSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< StringVector >::type feature_ids(feature_idsSEXP);
    Rcpp::traits::input_parameter< int >::type n_features(n_featuresSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< int >::type integer_id(integer_idSEXP);
    Rcpp::traits::input_parameter< int >::type chunk_size(chunk_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type compression_level(compression_levelSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type j(jSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type p(pSEXP);
    create_odm_r_matrix_cpp(file_name_in, feature_ids, n_features, n_cells, integer_id, chunk_size, compression_level, j, x, p);
    return R_NilValue;
END_RCPP
}
// load_row_cpp
IntegerVector load_row_cpp(const std::string& file_name_in, SEXP f_row_ptr, int row_idx, int n_cells);
RcppExport SEXP _ondisc_load_row_cpp(SEXP file_name_inSEXP, SEXP f_row_ptrSEXP, SEXP row_idxSEXP, SEXP n_cellsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< int >::type row_idx(row_idxSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    rcpp_result_gen = Rcpp::wrap(load_row_cpp(file_name_in, f_row_ptr, row_idx, n_cells));
    return rcpp_result_gen;
END_RCPP
}
// read_integer_vector
IntegerVector read_integer_vector(const std::string& file_name_in, const std::string& dataset_name, int length);
RcppExport SEXP _ondisc_read_integer_vector(SEXP file_name_inSEXP, SEXP dataset_nameSEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type dataset_name(dataset_nameSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(read_integer_vector(file_name_in, dataset_name, length));
    return rcpp_result_gen;
END_RCPP
}
// read_feature_ids
StringVector read_feature_ids(const std::string& file_name_in, int n_features);
RcppExport SEXP _ondisc_read_feature_ids(SEXP file_name_inSEXP, SEXP n_featuresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< int >::type n_features(n_featuresSEXP);
    rcpp_result_gen = Rcpp::wrap(read_feature_ids(file_name_in, n_features));
    return rcpp_result_gen;
END_RCPP
}
// read_row_ptr
SEXP read_row_ptr(const std::string& file_name_in, int n_features);
RcppExport SEXP _ondisc_read_row_ptr(SEXP file_name_inSEXP, SEXP n_featuresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< int >::type n_features(n_featuresSEXP);
    rcpp_result_gen = Rcpp::wrap(read_row_ptr(file_name_in, n_features));
    return rcpp_result_gen;
END_RCPP
}
// threshold_count_matrix_cpp
IntegerVector threshold_count_matrix_cpp(const std::string& file_name_in, SEXP f_row_ptr, int row_idx, int threshold);
RcppExport SEXP _ondisc_threshold_count_matrix_cpp(SEXP file_name_inSEXP, SEXP f_row_ptrSEXP, SEXP row_idxSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< int >::type row_idx(row_idxSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(threshold_count_matrix_cpp(file_name_in, f_row_ptr, row_idx, threshold));
    return rcpp_result_gen;
END_RCPP
}
// compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc
List compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc(const std::string& file_name_in, SEXP f_row_ptr, int n_genes, int n_cells_orig, int n_cells_sub, List grna_group_idxs, List indiv_nt_grna_idxs, IntegerVector all_nt_idxs, IntegerVector to_analyze_response_idxs, IntegerVector to_analyze_grna_idxs, bool control_group_complement, IntegerVector cells_in_use);
RcppExport SEXP _ondisc_compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc(SEXP file_name_inSEXP, SEXP f_row_ptrSEXP, SEXP n_genesSEXP, SEXP n_cells_origSEXP, SEXP n_cells_subSEXP, SEXP grna_group_idxsSEXP, SEXP indiv_nt_grna_idxsSEXP, SEXP all_nt_idxsSEXP, SEXP to_analyze_response_idxsSEXP, SEXP to_analyze_grna_idxsSEXP, SEXP control_group_complementSEXP, SEXP cells_in_useSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< int >::type n_genes(n_genesSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_orig(n_cells_origSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_sub(n_cells_subSEXP);
    Rcpp::traits::input_parameter< List >::type grna_group_idxs(grna_group_idxsSEXP);
    Rcpp::traits::input_parameter< List >::type indiv_nt_grna_idxs(indiv_nt_grna_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type all_nt_idxs(all_nt_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type to_analyze_response_idxs(to_analyze_response_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type to_analyze_grna_idxs(to_analyze_grna_idxsSEXP);
    Rcpp::traits::input_parameter< bool >::type control_group_complement(control_group_complementSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cells_in_use(cells_in_useSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc(file_name_in, f_row_ptr, n_genes, n_cells_orig, n_cells_sub, grna_group_idxs, indiv_nt_grna_idxs, all_nt_idxs, to_analyze_response_idxs, to_analyze_grna_idxs, control_group_complement, cells_in_use));
    return rcpp_result_gen;
END_RCPP
}
// compute_n_trt_cells_matrix_ondisc
IntegerMatrix compute_n_trt_cells_matrix_ondisc(const std::string& file_name_in, SEXP f_row_ptr, int n_cells_orig, int n_cells_sub, int n_genes, List nt_grna_group_idxs, IntegerVector cells_in_use);
RcppExport SEXP _ondisc_compute_n_trt_cells_matrix_ondisc(SEXP file_name_inSEXP, SEXP f_row_ptrSEXP, SEXP n_cells_origSEXP, SEXP n_cells_subSEXP, SEXP n_genesSEXP, SEXP nt_grna_group_idxsSEXP, SEXP cells_in_useSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_orig(n_cells_origSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_sub(n_cells_subSEXP);
    Rcpp::traits::input_parameter< int >::type n_genes(n_genesSEXP);
    Rcpp::traits::input_parameter< List >::type nt_grna_group_idxs(nt_grna_group_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cells_in_use(cells_in_useSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_n_trt_cells_matrix_ondisc(file_name_in, f_row_ptr, n_cells_orig, n_cells_sub, n_genes, nt_grna_group_idxs, cells_in_use));
    return rcpp_result_gen;
END_RCPP
}
// compute_n_ok_pairs_ondisc
List compute_n_ok_pairs_ondisc(const std::string& file_name_in, SEXP f_row_ptr, int n_genes, int n_cells_orig, int n_cells_sub, List grna_group_idxs, IntegerVector all_nt_idxs, IntegerVector to_analyze_response_idxs, IntegerVector to_analyze_grna_idxs, bool control_group_complement, IntegerVector cells_in_use, IntegerVector unique_response_idxs);
RcppExport SEXP _ondisc_compute_n_ok_pairs_ondisc(SEXP file_name_inSEXP, SEXP f_row_ptrSEXP, SEXP n_genesSEXP, SEXP n_cells_origSEXP, SEXP n_cells_subSEXP, SEXP grna_group_idxsSEXP, SEXP all_nt_idxsSEXP, SEXP to_analyze_response_idxsSEXP, SEXP to_analyze_grna_idxsSEXP, SEXP control_group_complementSEXP, SEXP cells_in_useSEXP, SEXP unique_response_idxsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type file_name_in(file_name_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type f_row_ptr(f_row_ptrSEXP);
    Rcpp::traits::input_parameter< int >::type n_genes(n_genesSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_orig(n_cells_origSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells_sub(n_cells_subSEXP);
    Rcpp::traits::input_parameter< List >::type grna_group_idxs(grna_group_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type all_nt_idxs(all_nt_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type to_analyze_response_idxs(to_analyze_response_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type to_analyze_grna_idxs(to_analyze_grna_idxsSEXP);
    Rcpp::traits::input_parameter< bool >::type control_group_complement(control_group_complementSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cells_in_use(cells_in_useSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type unique_response_idxs(unique_response_idxsSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_n_ok_pairs_ondisc(file_name_in, f_row_ptr, n_genes, n_cells_orig, n_cells_sub, grna_group_idxs, all_nt_idxs, to_analyze_response_idxs, to_analyze_grna_idxs, control_group_complement, cells_in_use, unique_response_idxs));
    return rcpp_result_gen;
END_RCPP
}
// obtain_pointer_vector
IntegerVector obtain_pointer_vector(IntegerVector i, int dim);
RcppExport SEXP _ondisc_obtain_pointer_vector(SEXP iSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(obtain_pointer_vector(i, dim));
    return rcpp_result_gen;
END_RCPP
}
// init_ull_vect
SEXP init_ull_vect(int size);
RcppExport SEXP _ondisc_init_ull_vect(SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(init_ull_vect(size));
    return rcpp_result_gen;
END_RCPP
}
// print_ull_vect
void print_ull_vect(SEXP ull_vect);
RcppExport SEXP _ondisc_print_ull_vect(SEXP ull_vectSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ull_vect(ull_vectSEXP);
    print_ull_vect(ull_vect);
    return R_NilValue;
END_RCPP
}
// update_dt_column
void update_dt_column(IntegerVector col, IntegerVector overwrite_vector, int start);
RcppExport SEXP _ondisc_update_dt_column(SEXP colSEXP, SEXP overwrite_vectorSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type col(colSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type overwrite_vector(overwrite_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    update_dt_column(col, overwrite_vector, start);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ondisc_update_n_features_vector", (DL_FUNC) &_ondisc_update_n_features_vector, 5},
    {"_ondisc_decrement_vector", (DL_FUNC) &_ondisc_decrement_vector, 1},
    {"_ondisc_add_value_to_vector", (DL_FUNC) &_ondisc_add_value_to_vector, 2},
    {"_ondisc_compute_cellwise_covariates", (DL_FUNC) &_ondisc_compute_cellwise_covariates, 19},
    {"_ondisc_write_to_csr", (DL_FUNC) &_ondisc_write_to_csr, 10},
    {"_ondisc_create_odm", (DL_FUNC) &_ondisc_create_odm, 7},
    {"_ondisc_create_odm_r_matrix_cpp", (DL_FUNC) &_ondisc_create_odm_r_matrix_cpp, 10},
    {"_ondisc_load_row_cpp", (DL_FUNC) &_ondisc_load_row_cpp, 4},
    {"_ondisc_read_integer_vector", (DL_FUNC) &_ondisc_read_integer_vector, 3},
    {"_ondisc_read_feature_ids", (DL_FUNC) &_ondisc_read_feature_ids, 2},
    {"_ondisc_read_row_ptr", (DL_FUNC) &_ondisc_read_row_ptr, 2},
    {"_ondisc_threshold_count_matrix_cpp", (DL_FUNC) &_ondisc_threshold_count_matrix_cpp, 4},
    {"_ondisc_compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc", (DL_FUNC) &_ondisc_compute_nt_nonzero_matrix_and_n_ok_pairs_ondisc, 12},
    {"_ondisc_compute_n_trt_cells_matrix_ondisc", (DL_FUNC) &_ondisc_compute_n_trt_cells_matrix_ondisc, 7},
    {"_ondisc_compute_n_ok_pairs_ondisc", (DL_FUNC) &_ondisc_compute_n_ok_pairs_ondisc, 12},
    {"_ondisc_obtain_pointer_vector", (DL_FUNC) &_ondisc_obtain_pointer_vector, 2},
    {"_ondisc_init_ull_vect", (DL_FUNC) &_ondisc_init_ull_vect, 1},
    {"_ondisc_print_ull_vect", (DL_FUNC) &_ondisc_print_ull_vect, 1},
    {"_ondisc_update_dt_column", (DL_FUNC) &_ondisc_update_dt_column, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ondisc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
